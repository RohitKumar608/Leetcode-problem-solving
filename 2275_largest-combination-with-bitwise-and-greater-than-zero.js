/**
 * @param {number[]} candidates
 * @return {number}
 */
var largestCombination = function (candidates) {
  let result = new Array(24).fill(0)
  function dec2bin(dec) {
    const binary = (dec >>> 0).toString(2)
    return '0'.repeat(24 - `${binary}`.length) + binary
  }
  for (let i = 0; i < candidates.length; i++) {
    const binary = dec2bin(candidates[i])
    candidates[i] = binary
  }
  for (let i = 0; i < candidates.length; i++) {
    for (let j = 0; j < candidates[i].length; j++) {
      result[j] += +candidates[i][j]
    }
  }
  return Math.max(...result)
}

// console.log(largestCombination([16, 17, 71, 62, 12, 24, 14]))
console.log(
  largestCombination([
    84, 228, 769, 973, 103, 219, 875, 970, 813, 829, 555, 686, 572, 931, 361,
    877, 76, 563, 188, 872, 815, 87, 847, 853, 174, 913, 486, 1, 514, 150, 411,
    172, 296, 936, 366, 701, 515, 618, 65, 973, 750, 417, 936, 775, 548, 62,
    245, 358, 915, 187, 921, 250, 295, 32, 618, 750, 169, 306, 956, 60, 894,
    653, 535, 843, 40, 696, 879, 464, 134, 678, 583, 251, 672, 557, 577, 577,
    125, 784, 942, 122, 188, 86, 200, 97, 61, 965, 651, 188, 909, 838, 590, 538,
    170, 345, 965, 691, 150, 703, 495, 99, 699, 895, 284, 915, 580, 37, 535,
    189, 266, 186, 370, 667, 689, 379, 680, 944, 984, 996, 882, 236, 592, 175,
    519, 661, 156, 139, 242, 935, 116, 85, 224, 842, 544, 263, 149, 834, 24,
    245, 926, 901, 9, 656, 226, 126, 624, 104, 13, 227, 557, 964, 884, 354, 999,
    641, 640, 860, 842, 551, 999, 291, 483, 384, 424, 71, 708, 377, 172, 554,
    804, 524, 968, 858, 106, 257, 696, 967, 985, 408, 994, 7, 839, 447, 325,
    869, 446, 675, 292, 788, 710, 261, 78, 269, 291, 538, 855, 73, 303, 753,
    843, 502, 721, 37, 392, 59, 543, 557, 716, 441, 953, 566, 976, 495, 747, 3,
    118, 731, 939, 552, 908, 994, 72, 577, 200, 289, 5, 128, 963, 833, 371, 506,
    289, 931, 985, 22, 910, 178, 252, 612, 81, 959, 343, 754, 398, 243, 538,
    454, 208, 284, 852, 876, 406, 833, 27, 28, 848, 216, 348, 42, 619, 116, 410,
    566, 166, 913, 87, 934, 83, 122, 897, 206, 251, 718, 76, 278, 861, 996, 446,
    922, 147, 396, 274, 624, 526, 634, 847, 913, 640, 576, 114, 567, 756, 509,
    977, 124, 535, 637, 526, 716, 460, 956, 127, 766, 727, 691, 437, 447, 304,
    21, 939, 220, 139, 105, 814, 242, 916, 941, 543, 485, 562, 71, 952, 168,
    578, 507, 354, 163, 806, 686, 721, 384, 457, 513, 303, 488, 600, 177, 532,
    378, 259, 603, 546, 740, 5, 537, 564, 222, 158, 188, 823, 924, 858, 687,
    243, 617, 59, 164, 455, 831, 492, 425, 955, 903, 212, 783, 983, 391, 735,
    296, 480, 798, 419, 621, 615, 860, 301, 551, 468, 84, 70, 413, 938, 520,
    973, 168, 448, 29, 387, 897, 270, 846, 870, 148, 476, 71, 105, 609, 397,
    472, 944, 285, 160, 245, 798, 460, 92, 327, 351, 708, 552, 509, 619, 373,
    11, 134, 797, 423, 973, 568, 989, 714, 568, 323, 991, 537, 259, 523, 578,
    296, 672, 804, 232, 896, 259, 557, 600, 531, 566, 446, 165, 674, 877, 43,
    367, 937, 601, 45, 867, 696, 333, 586, 122, 88, 727, 240, 582, 822, 123,
    668, 371, 6, 79, 896, 658, 435, 531, 271, 424, 38, 548, 74, 480, 181, 638,
    358, 528, 397, 338, 34, 134, 601, 619, 383, 425, 63, 840, 648, 663, 292,
    219, 270, 671, 806, 728, 198, 583, 849, 613, 404, 167, 456, 230, 411, 376,
    314, 809, 376, 496, 577, 668, 65, 616, 273, 552, 86, 276, 890, 699, 563,
    469, 330, 512, 688, 336, 783, 597, 362, 919, 213, 652, 159, 170, 521, 876,
    812, 525, 962, 301, 777, 483, 822, 704, 23, 86, 332, 191, 684, 401, 343,
    409, 871, 747, 540, 906, 487, 129, 190, 812, 293, 747, 995, 908, 604, 72,
    484, 97, 920, 575, 655, 974, 274, 255, 905, 344, 130, 543, 585, 79, 890,
    470, 930, 79, 361, 567, 546, 187, 948, 374, 7, 656, 371, 250, 526, 12, 326,
    155, 415, 792, 450, 334, 923, 744, 909, 547, 737, 869, 726, 392, 167, 802,
    738, 53, 272, 216, 181, 751, 114, 178, 556, 415, 369, 199, 38, 901, 371,
    201, 578, 327, 687, 606, 825, 45,
  ])
)
